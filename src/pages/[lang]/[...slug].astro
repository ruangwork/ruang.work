---
import Base from '@/layouts/base.astro'
import type { GetStaticPaths } from 'astro'
import { Image } from 'astro:assets'
import { CollectionEntry, getCollection, getEntries } from 'astro:content'
import { changeLanguage, t } from 'i18next'

import AuthorList from '@/components/author-list.astro'
// mdx custom
import Ads from '@/components/mdx/ads.astro'
import Toc from '@/components/mdx/toc.astro'
import { filterNotDraftPublished } from '@/repository/blog'
import { getAuthorsBySlugs } from '@/repository/author'

export const getStaticPaths: GetStaticPaths = async () => {
	const pages = await getCollection('blog', filterNotDraftPublished)
	const paths = pages.map((page) => {
		const [lang, ...slug] = page.slug.split('/')
		return { params: { lang, slug: slug.join('/') || undefined }, props: page }
	})
	return paths
}

type Props = CollectionEntry<'blog'>

const { lang } = Astro.params

changeLanguage(lang)

const page = Astro.props

const formattedDate = page.data.date.toLocaleString(lang, {
	weekday: 'long',
	year: 'numeric',
	month: 'long',
	day: 'numeric',
})

const { Content, remarkPluginFrontmatter, headings } = await page.render()

const authors = await getAuthorsBySlugs('author', page.data.authors)
---

<Base title={page.data.title} description={page.data.excerpt}>
	<article class="prose dark:prose-invert mt-12">
		<h1 class="m-0 text-3xl font-bold leading-10 md:text-4xl md:leading-none">
			{page.data.title}
		</h1>
		<div class="mt-4 mb-6 inline-flex flex-col gap-2 md:flex-row md:items-center">
			<div
				class="flex w-auto cursor-pointer items-center rounded-full border border-solid border-gray-800 bg-black px-3 py-2">
				<div class="not-prose flex items-center text-slate-100">
					<AuthorList authors={authors} />
				</div>
			</div>
			<div class="mt-2 flex h-full items-center gap-x-2 md:m-0 text-xs">
				<span class="hidden text-slate-500 md:my-0 md:block">•</span>
				<time datetime={formattedDate} aria-label={formattedDate} class='text-slate-400"'>
					{formattedDate}
				</time>
				<span class='text-slate-500"'>•</span>
				<p class="m-0 text-slate-400">
					{remarkPluginFrontmatter.minutesRead}
				</p>
			</div>
		</div>

		{
			page.data.cover && (
				<Image
					src={page.data.cover}
					width={page.data.cover.width / 10}
					decoding="async"
					quality="low"
					alt={t('home:welcoming.greeting')}
					class="relative my-6 w-full object-cover border-2 border-slate-800"
				/>
			)
		}
		<Toc headings={headings} />
		<Content components={{ Ads }} />
	</article>
</Base>
