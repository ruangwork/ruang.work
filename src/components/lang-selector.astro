---
import { localizePath } from 'astro-i18next'
import i18next from 'i18next'
import ISO6991 from 'iso-639-1'
import localeEmoji from 'locale-emoji'

interface languageMapping {
	[localeCode: string]: string
}

export interface Props extends astroHTML.JSX.SelectHTMLAttributes {
	showFlag?: boolean
	languageMapping?: languageMapping
}

const supportedLanguages = i18next.languages
const currentLanguage = i18next.language

const { pathname } = Astro.url

const { showFlag = false, languageMapping, ...attributes } = Astro.props
---

<select
	onchange="
	location = this.value;
	"
	{...attributes}
	class="block text-slate-900 dark:text-slate-900 py-1 text-xs font-mono">
	{
		supportedLanguages.map((supportedLanguage: string) => {
			let value = localizePath(pathname, supportedLanguage)
			const flag = showFlag ? localeEmoji(supportedLanguage) + ' ' : ''

			let nativeName = ''
			if (languageMapping && languageMapping.hasOwnProperty(supportedLanguage)) {
				nativeName = languageMapping[supportedLanguage]
			} else {
				nativeName = ISO6991.getNativeName(supportedLanguage)
			}

			const label = flag + nativeName

			return (
				<option value={value} selected={supportedLanguage === currentLanguage}>
					{label}
				</option>
			)
		})
	}
</select>
