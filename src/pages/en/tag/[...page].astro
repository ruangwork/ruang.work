---
import i18next, { changeLanguage } from "i18next";
import Base from "@/layouts/base.astro";
import { CollectionEntry, getCollection } from "astro:content";
import type { GetStaticPaths, Page } from "astro";
import { localizePath } from "astro-i18next";

changeLanguage("en");

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const posts = await getCollection("blog", ({ id }) => {
    return id.startsWith(`${i18next.language}/`);
  });
  const tags = [...new Set(posts.map((post) => post.data.tags).flat())];

  return paginate(posts, {
    pageSize: 2,
  });
};

export type Props = {
  page: Page<CollectionEntry<"blog">>;
};

const { page } = Astro.props;
const posts = await getCollection("blog", ({ id }) => {
  return id.startsWith(`${i18next.language}/`);
});
const tags = [...new Set(posts.map((post) => post.data.tags).flat())];
---

<Base>
  <main class="max-w-7xl mx-auto mb-12">
    <header class="py-6 text-2xl">Blog</header>
    <div class="flex flex-warp gap-4 max-w-xl">
      {
        tags.map((tag) => (
          <span class="border rounded border-black px-1 py-0.5">{tag}</span>
        ))
      }
    </div>
    <section class="grid gap-4">
      {
        page.data.length !== 0 &&
          page.data.map((post) => (
            <a href={localizePath(`${post.slug}`)}>
              {post.slug}
              <br />
              {post.data.title}
            </a>
          ))
      }
    </section>
    <div class="grid w-full grid-cols-3 max-w-md mt-12">
      {
        page.url.prev ? (
          <a class="flex items-center gap-2 text-left" href={page.url.prev}>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="h-4 w-4"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18"
              />
            </svg>
            Previous
          </a>
        ) : (
          <span />
        )
      }
      {
        page.url.current ? (
          <span class="text-center">Page {page.currentPage}</span>
        ) : (
          <span />
        )
      }
      {
        page.url.next ? (
          <a
            class="flex items-center justify-end gap-2 text-right"
            href={page.url.next}
          >
            Next
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="h-4 w-4"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3"
              />
            </svg>
          </a>
        ) : (
          <span />
        )
      }
    </div>
  </main>
</Base>
